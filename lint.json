[{"filePath":"c:\\Users\\it\\Downloads\\mne\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\components\\LandingPage.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":117,"column":61,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":64,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3236,3239],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3236,3239],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, FormEvent } from 'react';\nimport {\n  User,\n  Phone,\n  Mail,\n  Building2,\n  MapPin,\n  Globe,\n  Instagram,\n  Youtube,\n  MessageSquare,\n  FileText,\n  Stethoscope,\n  Briefcase,\n  Send\n} from 'lucide-react';\nimport { submitForm, FormSubmission } from '../lib/supabase';\nimport { cityOptions } from '../data/cities';\n\ninterface FormData {\n  firstName: string;\n  lastName: string;\n  whatsapp: string;\n  email: string;\n  brandName: string;\n  representativeType: string;\n  medicalSpecialty: string;\n  brandField: string;\n  city: string;\n  country: string;\n  website: string;\n  instagram: string;\n  youtube: string;\n  tiktok: string;\n  snapchat: string;\n  messageToManagement: string;\n  notes: string;\n}\n\nexport default function LandingPage() {\n  const [formData, setFormData] = useState<FormData>({\n    firstName: '',\n    lastName: '',\n    whatsapp: '',\n    email: '',\n    brandName: '',\n    representativeType: '',\n    medicalSpecialty: '',\n    brandField: '',\n    city: '',\n    country: 'السعودية',\n    website: '',\n    instagram: '',\n    youtube: '',\n    tiktok: '',\n    snapchat: '',\n    messageToManagement: '',\n    notes: '',\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const showMedicalSpecialty =\n    formData.representativeType === 'doctor' ||\n    formData.representativeType === 'clinic';\n\n  const showBrandField = formData.representativeType === 'other';\n  const showCountryInput = formData.city === 'outside_ksa';\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.firstName.trim()) newErrors.firstName = 'الاسم الأول مطلوب';\n    if (!formData.lastName.trim()) newErrors.lastName = 'الاسم الثاني مطلوب';\n    if (!formData.whatsapp.trim()) newErrors.whatsapp = 'رقم الواتساب مطلوب';\n    if (!formData.email.trim()) newErrors.email = 'البريد الإلكتروني مطلوب';\n    if (!formData.brandName.trim()) newErrors.brandName = 'اسم البراند مطلوب';\n    if (!formData.representativeType) newErrors.representativeType = 'يرجى الاختيار';\n    if (!formData.city) newErrors.city = 'المدينة مطلوبة';\n\n    if (showMedicalSpecialty && !formData.medicalSpecialty.trim()) {\n      newErrors.medicalSpecialty = 'التخصص الطبي مطلوب';\n    }\n\n    if (showBrandField && !formData.brandField.trim()) {\n      newErrors.brandField = 'مجال عمل البراند مطلوب';\n    }\n\n    if (showCountryInput && !formData.country.trim()) {\n      newErrors.country = 'اسم الدولة مطلوب';\n    }\n\n    if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'البريد الإلكتروني غير صحيح';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n\n    try {\n      const submission: FormSubmission = {\n        first_name: formData.firstName,\n        last_name: formData.lastName,\n        whatsapp: formData.whatsapp,\n        email: formData.email,\n        brand_name: formData.brandName,\n        representative_type: formData.representativeType as any,\n        city: formData.city,\n        country: showCountryInput ? formData.country : 'السعودية',\n        ...(showMedicalSpecialty && { medical_specialty: formData.medicalSpecialty }),\n        ...(showBrandField && { brand_field: formData.brandField }),\n        ...(formData.website && { website: formData.website }),\n        ...(formData.instagram && { instagram: formData.instagram }),\n        ...(formData.youtube && { youtube: formData.youtube }),\n        ...(formData.tiktok && { tiktok: formData.tiktok }),\n        ...(formData.snapchat && { snapchat: formData.snapchat }),\n        ...(formData.messageToManagement && { message_to_management: formData.messageToManagement }),\n        ...(formData.notes && { notes: formData.notes }),\n      };\n\n      await submitForm(submission);\n      setSubmitSuccess(true);\n\n      setTimeout(() => {\n        setFormData({\n          firstName: '',\n          lastName: '',\n          whatsapp: '',\n          email: '',\n          brandName: '',\n          representativeType: '',\n          medicalSpecialty: '',\n          brandField: '',\n          city: '',\n          country: 'السعودية',\n          website: '',\n          instagram: '',\n          youtube: '',\n          tiktok: '',\n          snapchat: '',\n          messageToManagement: '',\n          notes: '',\n        });\n        setSubmitSuccess(false);\n      }, 3000);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('حدث خطأ أثناء الإرسال. يرجى المحاولة مرة أخرى.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n\n    if (field === 'city' && value !== 'outside_ksa') {\n      setFormData(prev => ({ ...prev, country: 'السعودية' }));\n    }\n\n    if (field === 'representativeType') {\n      if (value !== 'doctor' && value !== 'clinic') {\n        setFormData(prev => ({ ...prev, medicalSpecialty: '' }));\n      }\n      if (value !== 'other') {\n        setFormData(prev => ({ ...prev, brandField: '' }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen relative overflow-hidden bg-gradient-to-br from-blue-950 via-blue-900 to-sky-800\">\n      <div className=\"absolute inset-0 bg-grid-pattern opacity-5\"></div>\n\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"pulse-wave\"></div>\n        <div className=\"pulse-wave\" style={{ animationDelay: '2s' }}></div>\n      </div>\n\n      <div className=\"relative z-10 container mx-auto px-4 py-8 md:py-12\">\n        <header className=\"text-center mb-8 md:mb-12 animate-fade-in\">\n          <div className=\"inline-flex flex-col items-center gap-4 mb-4\">\n            <div className=\"relative\">\n              <div className=\"w-24 h-24 md:w-32 md:h-32 flex items-center justify-center animate-float\">\n                <img\n                  src=\"/Dot-Logo.svg\"\n                  alt=\"Dot Studio Logo\"\n                  className=\"w-full h-full drop-shadow-2xl\"\n                />\n              </div>\n              <div className=\"absolute -bottom-2 left-1/2 -translate-x-1/2 w-20 h-1 bg-gradient-to-r from-transparent via-blue-400 to-transparent blur-sm\"></div>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-white tracking-wide\" style={{ fontFamily: \"'Cairo', sans-serif\", letterSpacing: '0.02em' }}>\n              Dot Studio\n            </h1>\n          </div>\n          <p className=\"text-2xl md:text-3xl text-sky-100 font-semibold\" style={{ fontFamily: \"'Cairo', sans-serif\" }}>\n            نرسم حضورك الطبي\n          </p>\n        </header>\n\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"glass-card p-6 md:p-8 lg:p-10 animate-slide-up\">\n            {submitSuccess && (\n              <div className=\"mb-6 p-4 bg-green-500/20 border border-green-400 rounded-lg text-green-100 text-center animate-fade-in\">\n                تم إرسال البيانات بنجاح! سنتواصل معك قريباً\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit} className=\"space-y-5\">\n              <div className=\"grid md:grid-cols-2 gap-5\">\n                <div className=\"form-group\">\n                  <label className=\"form-label\">\n                    <User className=\"w-5 h-5\" />\n                    <span>الاسم الأول *</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.firstName}\n                    onChange={(e) => handleChange('firstName', e.target.value)}\n                    className={`form-input ${errors.firstName ? 'border-red-400' : ''}`}\n                    placeholder=\"أدخل اسمك الأول\"\n                  />\n                  {errors.firstName && <p className=\"form-error\">{errors.firstName}</p>}\n                </div>\n\n                <div className=\"form-group\">\n                  <label className=\"form-label\">\n                    <User className=\"w-5 h-5\" />\n                    <span>الاسم الثاني *</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.lastName}\n                    onChange={(e) => handleChange('lastName', e.target.value)}\n                    className={`form-input ${errors.lastName ? 'border-red-400' : ''}`}\n                    placeholder=\"أدخل اسمك الثاني\"\n                  />\n                  {errors.lastName && <p className=\"form-error\">{errors.lastName}</p>}\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <Phone className=\"w-5 h-5\" />\n                  <span>رقم الواتساب *</span>\n                </label>\n                <div className=\"flex gap-2\">\n                  <div className=\"w-20 px-3 py-2.5 bg-white/10 border border-white/20 rounded-lg text-white text-center font-medium\">\n                    +966\n                  </div>\n                  <input\n                    type=\"tel\"\n                    value={formData.whatsapp}\n                    onChange={(e) => handleChange('whatsapp', e.target.value)}\n                    className={`form-input flex-1 ${errors.whatsapp ? 'border-red-400' : ''}`}\n                    placeholder=\"5xxxxxxxx\"\n                  />\n                </div>\n                <p className=\"mt-2 text-xs text-sky-200\">\n                  سيتم إرسال رمز التحقق عبر الواتساب\n                </p>\n                {errors.whatsapp && <p className=\"form-error\">{errors.whatsapp}</p>}\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <Mail className=\"w-5 h-5\" />\n                  <span>البريد الإلكتروني *</span>\n                </label>\n                <input\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) => handleChange('email', e.target.value)}\n                  className={`form-input ${errors.email ? 'border-red-400' : ''}`}\n                  placeholder=\"example@domain.com\"\n                  dir=\"ltr\"\n                />\n                {errors.email && <p className=\"form-error\">{errors.email}</p>}\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <Building2 className=\"w-5 h-5\" />\n                  <span>اسم البراند *</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.brandName}\n                  onChange={(e) => handleChange('brandName', e.target.value)}\n                  className={`form-input ${errors.brandName ? 'border-red-400' : ''}`}\n                  placeholder=\"أدخل اسم البراند\"\n                />\n                {errors.brandName && <p className=\"form-error\">{errors.brandName}</p>}\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <Briefcase className=\"w-5 h-5\" />\n                  <span>أنت تتحدث بالنيابة عن؟ *</span>\n                </label>\n                <select\n                  value={formData.representativeType}\n                  onChange={(e) => handleChange('representativeType', e.target.value)}\n                  className={`form-input ${errors.representativeType ? 'border-red-400' : ''}`}\n                >\n                  <option value=\"\">اختر...</option>\n                  <option value=\"doctor\">طبيب</option>\n                  <option value=\"clinic\">عيادة</option>\n                  <option value=\"medical_center\">مركز طبي</option>\n                  <option value=\"other\">أخرى</option>\n                </select>\n                {errors.representativeType && <p className=\"form-error\">{errors.representativeType}</p>}\n              </div>\n\n              {showMedicalSpecialty && (\n                <div className=\"form-group animate-slide-down\">\n                  <label className=\"form-label\">\n                    <Stethoscope className=\"w-5 h-5\" />\n                    <span>التخصص الطبي *</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.medicalSpecialty}\n                    onChange={(e) => handleChange('medicalSpecialty', e.target.value)}\n                    className={`form-input ${errors.medicalSpecialty ? 'border-red-400' : ''}`}\n                    placeholder=\"مثلاً: طب الأسنان، جراحة، أطفال...\"\n                  />\n                  {errors.medicalSpecialty && <p className=\"form-error\">{errors.medicalSpecialty}</p>}\n                </div>\n              )}\n\n              {showBrandField && (\n                <div className=\"form-group animate-slide-down\">\n                  <label className=\"form-label\">\n                    <Briefcase className=\"w-5 h-5\" />\n                    <span>مجال عمل البراند *</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.brandField}\n                    onChange={(e) => handleChange('brandField', e.target.value)}\n                    className={`form-input ${errors.brandField ? 'border-red-400' : ''}`}\n                    placeholder=\"مثلاً: تجارة إلكترونية، مطعم، معرض سيارات\"\n                  />\n                  {errors.brandField && <p className=\"form-error\">{errors.brandField}</p>}\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <MapPin className=\"w-5 h-5\" />\n                  <span>المدينة *</span>\n                </label>\n                <select\n                  value={formData.city}\n                  onChange={(e) => handleChange('city', e.target.value)}\n                  className={`form-input ${errors.city ? 'border-red-400' : ''}`}\n                >\n                  <option value=\"\">اختر المدينة...</option>\n                  {cityOptions.map((city) => (\n                    <option key={city.value} value={city.value}>\n                      {city.label}\n                    </option>\n                  ))}\n                </select>\n                {errors.city && <p className=\"form-error\">{errors.city}</p>}\n              </div>\n\n              {showCountryInput && (\n                <div className=\"form-group animate-slide-down\">\n                  <label className=\"form-label\">\n                    <Globe className=\"w-5 h-5\" />\n                    <span>اسم الدولة *</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.country}\n                    onChange={(e) => handleChange('country', e.target.value)}\n                    className={`form-input ${errors.country ? 'border-red-400' : ''}`}\n                    placeholder=\"أدخل اسم الدولة\"\n                  />\n                  {errors.country && <p className=\"form-error\">{errors.country}</p>}\n                </div>\n              )}\n\n              <div className=\"pt-4 border-t border-white/10\">\n                <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                  <Globe className=\"w-5 h-5 text-sky-300\" />\n                  روابط التواصل الاجتماعي\n                </h3>\n\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div className=\"form-group\">\n                    <label className=\"form-label text-sm\">\n                      <Globe className=\"w-4 h-4\" />\n                      <span>الموقع الإلكتروني</span>\n                    </label>\n                    <input\n                      type=\"url\"\n                      value={formData.website}\n                      onChange={(e) => handleChange('website', e.target.value)}\n                      className=\"form-input\"\n                      placeholder=\"https://example.com\"\n                      dir=\"ltr\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label text-sm\">\n                      <Instagram className=\"w-4 h-4\" />\n                      <span>إنستجرام</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.instagram}\n                      onChange={(e) => handleChange('instagram', e.target.value)}\n                      className=\"form-input\"\n                      placeholder=\"@username\"\n                      dir=\"ltr\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label text-sm\">\n                      <Youtube className=\"w-4 h-4\" />\n                      <span>يوتيوب</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.youtube}\n                      onChange={(e) => handleChange('youtube', e.target.value)}\n                      className=\"form-input\"\n                      placeholder=\"Channel URL\"\n                      dir=\"ltr\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label text-sm\">\n                      <MessageSquare className=\"w-4 h-4\" />\n                      <span>تيك توك</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.tiktok}\n                      onChange={(e) => handleChange('tiktok', e.target.value)}\n                      className=\"form-input\"\n                      placeholder=\"@username\"\n                      dir=\"ltr\"\n                    />\n                  </div>\n\n                  <div className=\"form-group md:col-span-2\">\n                    <label className=\"form-label text-sm\">\n                      <MessageSquare className=\"w-4 h-4\" />\n                      <span>سناب شات</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.snapchat}\n                      onChange={(e) => handleChange('snapchat', e.target.value)}\n                      className=\"form-input\"\n                      placeholder=\"@username\"\n                      dir=\"ltr\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <MessageSquare className=\"w-5 h-5\" />\n                  <span>رسالة للإدارة</span>\n                </label>\n                <textarea\n                  value={formData.messageToManagement}\n                  onChange={(e) => handleChange('messageToManagement', e.target.value.slice(0, 1000))}\n                  className=\"form-input min-h-[100px] resize-none\"\n                  placeholder=\"اكتب رسالتك هنا...\"\n                  maxLength={1000}\n                ></textarea>\n                <div className=\"flex justify-between items-center mt-2\">\n                  <p className=\"text-xs text-sky-200\">\n                    في حال كتابة رسالة، سيتم إرسالها مرفقة ببياناتك بشكل مباشر لإدارة الشركة\n                  </p>\n                  <span className=\"text-xs text-sky-300\">\n                    {formData.messageToManagement.length}/1000\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <FileText className=\"w-5 h-5\" />\n                  <span>ملاحظات</span>\n                </label>\n                <textarea\n                  value={formData.notes}\n                  onChange={(e) => handleChange('notes', e.target.value)}\n                  className=\"form-input min-h-[100px] resize-none\"\n                  placeholder=\"أي ملاحظات إضافية...\"\n                ></textarea>\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full py-4 px-6 bg-gradient-to-r from-blue-600 to-sky-500 hover:from-blue-700 hover:to-sky-600 text-white font-bold rounded-xl shadow-xl hover:shadow-2xl transform hover:scale-[1.02] transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-3 text-lg\"\n              >\n                {isSubmitting ? (\n                  <>\n                    <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                    <span>جاري الإرسال...</span>\n                  </>\n                ) : (\n                  <>\n                    <Send className=\"w-6 h-6\" />\n                    <span>ابدأ الآن</span>\n                  </>\n                )}\n              </button>\n            </form>\n          </div>\n\n          <footer className=\"text-center mt-8 text-sky-200 text-sm\">\n            <p>© 2025 Dot Studio. جميع الحقوق محفوظة</p>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\data\\cities.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\lib\\supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\tailwind.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"c:\\Users\\it\\Downloads\\mne\\vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]